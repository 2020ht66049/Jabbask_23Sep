Topic: DevSecOps

1) Security is very important is all the aspect, and without security things will become userless or clumsy.

2) So far we discuss about Devops. DevSecOps=Devops+security

3) Here, it seems we are defining security in the last, but we should introduce security from all the phases of devops. it means shift leaft approache.

in DevSecOps we have 3 things-

1) SAST[static application security testing]
2) DAST[Dynamic application security testing]
3) SCA[software compostion analysis]

Lets say I have my code in git hub, and I have written something like this-

<Bank>Citibank</Bank>
<username>Olu</username>
<password>Olu@321</password>

it means it can be hacked very easily


1) SAST Hands on
=================

Here, we will scan the code, and we will see the posible vurnability.

[Source code] https://github.com/juice-shop/juice-shop
Step1: git clone https://github.com/juice-shop/juice-shop

[SAST tool link] https://github.com/ZupIT/horusec
Horusec is an open source tool that improves identification of vulnerabilities in your project with just one command.
Step2: apt-get update ; apt install jq

Step3: curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/master/deployments/scripts/install.sh | bash -s latest

Step3: horusec start -D -e="true" -p ./

2) DAST hands on
================
Lets say example is google[gmail]. gmail is collection of pages-

sentpage:https://mail.google.com/mail/u/0/?ogbl#sent
inboxpage:https://mail.google.com/mail/u/0/?ogbl#inbox
spampage:https://mail.google.com/mail/u/0/?ogbl#spam?compose=new
compose page:https://mail.google.com/mail/u/0/?ogbl#sent?compose=new


Run application as container
Step1: docker run --rm -idt -p 3000:3000 bkimminich/juice-shop 

docker run -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t <Application URL>
docker run -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://ip172-18-0-27-cl5f0lssnmng008eutgg-3000.direct.labs.play-with-docker.com/#/

WARN-NEW: Dangerous JS Functions [10110] x 2 
        http://ip172-18-0-100-ckucfiufml8g009dm00g-3000.direct.labs.play-with-docker.com/main.js (200 OK)
        http://ip172-18-0-100-ckucfiufml8g009dm00g-3000.direct.labs.play-with-docker.com/vendor.js (200 OK)
FAIL-NEW: 0     FAIL-INPROG: 0  WARN-NEW: 9     WARN-INPROG: 0  INFO: 0 IGNORE: 0       PASS: 56

3) SCA Hands on
===============
Lets say we have 3 layer system. Host> docker> Application[GIT,Java]
It will have multiple layer of scan
1) Host scan
2) Docker scan
3) Application scan


[Source code] https://github.com/juice-shop/juice-shop
Step1: git clone https://github.com/juice-shop/juice-shop

Step2: cd juice-shop/frontend/ ; vi package.json
in package.jso we have defined our dependancy. 

Step3: add dependacy "lodash": "0.5.0",
lodash: Lodash is a JavaScript library which provides utility functions for common programming tasks using the functional programming paradigm

Step4: apt-get update ; apt install npm

Step5: npm install
 
added 1479 packages from 2458 contributors and audited 1521 packages in 110.665s

260 packages are looking for funding
  run `npm fund` for details

found 11 vulnerabilities (10 moderate, 1 high)
  run `npm audit fix` to fix them, or `npm audit` for details

Jfrog XRAY
==========
FROM ubuntu
CMD echo "Hello-world"

tomorrow's agenda:
=================
Pending k8s topic[Volume, persistant volume, persitant volume claim, namespace, annotaion, scerate, lable]
Jenkins free style and pipeline job

Next 3 days:
============
Devops pipeline, and how we can practically implement devops



















